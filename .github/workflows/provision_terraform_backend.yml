name: "Provision aws s3 backend"
defaults:
  run:
    shell: bash
    working-directory: modules/terraform-aws-backend
on:
  workflow_dispatch:
    inputs:
      aws_default_region:
        description: "Default region of aws"
        required: false
        default: "us-east-2"
      namespace:
        description: "Prefix of the resources"
        required: false
        default: "zimagi"
      name:
        description: "Name of the resource"
        required: false
        default: "terraform"
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BACKEND_FILE_NAME: "backend.tf"
jobs:
  provision_aws_backend:
    name: "Provision aws backend"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@master
      - name: "Install terraform cli"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "0.15.0"
      - name: Extract branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: branch_name
      - run: terraform version
      - name: "Terraform format"
        continue-on-error: false
        run: terraform fmt -check -no-color
      - name: "Terraform Init"
        continue-on-error: false
        run: terraform init
      - name: "Terraform Validate"
        continue-on-error: false
        run: terraform validate -no-color
      - name: "Terraform Apply"
        continue-on-error: false
        run: terraform apply -no-color -auto-approve
        env:
          TF_VAR_region: ${{ github.event.inputs.aws_default_region }}
          TF_VAR_namespace: ${{ github.event.inputs.namespace }}
          TF_VAR_name: ${{ github.event.inputs.name }}
          TF_VAR_stage: ${{ steps.branch_name.outputs.branch }}
          TF_VAR_terraform_backend_config_file_name: ${{ env.BACKEND_FILE_NAME }}
      - name: "Terraform Init force-copy"
        continue-on-error: false
        run: terraform init -force-copy
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.aws_default_region }}
      - name: "Upload backend config file into s3"
        run: |
          aws s3 cp ${{ env.BACKEND_FILE_NAME }} \
          s3://${{ github.event.inputs.namespace }}-${{ steps.branch_name.outputs.branch }}-${{ github.event.inputs.name }}-state/${{ env.BACKEND_FILE_NAME }}
